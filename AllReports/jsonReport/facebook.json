[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3632116700,
              "status": "passed"
            },
            "line": 5,
            "name": "User have to enter facebook application through chrome browser",
            "match": {
              "location": "StepDefinition.user_have_to_enter_facebook_application_through_chrome_browser()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-30T06:55:16.268Z",
        "before": [
          {
            "result": {
              "duration": 1578200,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef1()"
            }
          },
          {
            "result": {
              "duration": 1529500,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef2()"
            }
          },
          {
            "result": {
              "duration": 340600,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef3()"
            }
          },
          {
            "result": {
              "duration": 4558747400,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef()"
            }
          }
        ],
        "line": 8,
        "name": "To validate login by using invalid username and valid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook-application;to-validate-login-by-using-invalid-username-and-valid-password",
        "after": [
          {
            "result": {
              "duration": 842284300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft(Scenario)"
            }
          },
          {
            "result": {
              "duration": 536100,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft3()"
            }
          },
          {
            "result": {
              "duration": 288800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft2()"
            }
          },
          {
            "result": {
              "duration": 228300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft1()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 937267300,
              "status": "passed"
            },
            "line": 9,
            "name": "User have to enter invalid username and valid password",
            "match": {
              "location": "StepDefinition.user_have_to_enter_invalid_username_and_valid_password(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "greens123@gmail.com",
                  "selenium123@gmail.com",
                  "selenium123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3187822000,
              "status": "passed"
            },
            "line": 11,
            "name": "User have to click login button",
            "match": {
              "location": "StepDefinition.user_have_to_click_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1812785000,
              "status": "passed"
            },
            "line": 12,
            "name": "User should be in a invalid credential page",
            "match": {
              "location": "StepDefinition.user_should_be_in_a_invalid_credential_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@Smoke"
          },
          {
            "name": "@Sanity"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3805094800,
              "status": "passed"
            },
            "line": 5,
            "name": "User have to enter facebook application through chrome browser",
            "match": {
              "location": "StepDefinition.user_have_to_enter_facebook_application_through_chrome_browser()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-30T06:55:31.333Z",
        "before": [
          {
            "result": {
              "duration": 357800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef1()"
            }
          },
          {
            "result": {
              "duration": 424900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef2()"
            }
          },
          {
            "result": {
              "duration": 260200,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef3()"
            }
          },
          {
            "result": {
              "duration": 2434660100,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef()"
            }
          }
        ],
        "line": 15,
        "name": "To validate login by using invalid username and invalid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook-application;to-validate-login-by-using-invalid-username-and-invalid-password",
        "after": [
          {
            "result": {
              "duration": 918520900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft(Scenario)"
            }
          },
          {
            "result": {
              "duration": 253600,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft3()"
            }
          },
          {
            "result": {
              "duration": 323300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft2()"
            }
          },
          {
            "result": {
              "duration": 285000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft1()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 492844300,
              "status": "passed"
            },
            "line": 16,
            "name": "User have to enter invalid username and invalid password",
            "match": {
              "location": "StepDefinition.user_have_to_enter_invalid_username_and_invalid_password(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "selenium",
                  "selenium123@gmail.com",
                  "selenium123"
                ]
              },
              {
                "cells": [
                  "python",
                  "python123@gmail.com",
                  "python123"
                ]
              },
              {
                "cells": [
                  "jenkins",
                  "jenkins123@gmail.com",
                  "jenkins123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3217186900,
              "status": "passed"
            },
            "line": 20,
            "name": "User have to click login button",
            "match": {
              "location": "StepDefinition.user_have_to_click_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6868818800,
              "status": "passed"
            },
            "line": 21,
            "name": "User should be in a invalid credential page",
            "match": {
              "location": "StepDefinition.user_should_be_in_a_invalid_credential_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@Sanity"
          },
          {
            "name": "@Regression"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3037029800,
              "status": "passed"
            },
            "line": 5,
            "name": "User have to enter facebook application through chrome browser",
            "match": {
              "location": "StepDefinition.user_have_to_enter_facebook_application_through_chrome_browser()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-30T06:55:49.092Z",
        "before": [
          {
            "result": {
              "duration": 381900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef1()"
            }
          },
          {
            "result": {
              "duration": 297600,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef2()"
            }
          },
          {
            "result": {
              "duration": 298500,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef3()"
            }
          },
          {
            "result": {
              "duration": 3417030800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef()"
            }
          }
        ],
        "line": 24,
        "name": "To validate login by using username and valid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook-application;to-validate-login-by-using-username-and-valid-password",
        "after": [
          {
            "result": {
              "duration": 1045258900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft(Scenario)"
            }
          },
          {
            "result": {
              "duration": 258100,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft3()"
            }
          },
          {
            "result": {
              "duration": 167700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft2()"
            }
          },
          {
            "result": {
              "duration": 171400,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft1()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 485954100,
              "status": "passed"
            },
            "line": 25,
            "name": "User have to enter username and valid password",
            "match": {
              "location": "StepDefinition.user_have_to_enter_username_and_valid_password(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "username",
                  "Eniyan"
                ]
              },
              {
                "cells": [
                  "email",
                  "eniyan123@gmail.com"
                ]
              },
              {
                "cells": [
                  "password",
                  "Eniyan123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3154342900,
              "status": "passed"
            },
            "line": 29,
            "name": "User have to click login button",
            "match": {
              "location": "StepDefinition.user_have_to_click_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3146966100,
              "status": "passed"
            },
            "line": 30,
            "name": "User should be in a invalid credential page",
            "match": {
              "location": "StepDefinition.user_should_be_in_a_invalid_credential_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@smoke"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 3477284800,
              "status": "passed"
            },
            "line": 5,
            "name": "User have to enter facebook application through chrome browser",
            "match": {
              "location": "StepDefinition.user_have_to_enter_facebook_application_through_chrome_browser()"
            },
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-04-30T06:56:03.397Z",
        "before": [
          {
            "result": {
              "duration": 374700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef1()"
            }
          },
          {
            "result": {
              "duration": 942000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef2()"
            }
          },
          {
            "result": {
              "duration": 334800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef3()"
            }
          },
          {
            "result": {
              "duration": 2232200300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef()"
            }
          }
        ],
        "line": 33,
        "name": "To validate login by using valid username and invalid password",
        "description": "",
        "id": "to-validate-login-functionality-of-facebook-application;to-validate-login-by-using-valid-username-and-invalid-password",
        "after": [
          {
            "result": {
              "duration": 886722700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft(Scenario)"
            }
          },
          {
            "result": {
              "duration": 321000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft3()"
            }
          },
          {
            "result": {
              "duration": 277700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft2()"
            }
          },
          {
            "result": {
              "duration": 258100,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft1()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 583108800,
              "status": "passed"
            },
            "line": 34,
            "name": "User have to enter valid username and invalid password",
            "match": {
              "location": "StepDefinition.user_have_to_enter_valid_username_and_invalid_password(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "username",
                  "email",
                  "password"
                ]
              },
              {
                "cells": [
                  "java",
                  "java123@gmail.com",
                  "java123"
                ]
              },
              {
                "cells": [
                  "jira",
                  "jira123@gmail.com",
                  "jira123"
                ]
              },
              {
                "cells": [
                  "python",
                  "python123@gmail.com",
                  "python123"
                ]
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3221731800,
              "status": "passed"
            },
            "line": 39,
            "name": "User have to click login button",
            "match": {
              "location": "StepDefinition.user_have_to_click_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11302579500,
              "status": "passed"
            },
            "line": 40,
            "name": "User should be in a invalid credential page",
            "match": {
              "location": "StepDefinition.user_should_be_in_a_invalid_credential_page()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Login"
          },
          {
            "name": "@regression"
          }
        ]
      }
    ],
    "name": "To validate login functionality of facebook application",
    "description": "",
    "id": "to-validate-login-functionality-of-facebook-application",
    "keyword": "Feature",
    "uri": "file:src/test/resources/featureFile/Login.feature",
    "tags": [
      {
        "name": "@Login",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2022-04-30T06:56:25.125Z",
        "before": [
          {
            "result": {
              "duration": 1576900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef1()"
            }
          },
          {
            "result": {
              "duration": 309000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef2()"
            }
          },
          {
            "result": {
              "duration": 310700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef3()"
            }
          },
          {
            "result": {
              "duration": 2426415700,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.bef()"
            }
          }
        ],
        "line": 6,
        "name": "",
        "description": "     To validate forgotten password",
        "id": ";",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 1020524000,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft(Scenario)"
            }
          },
          {
            "result": {
              "duration": 185300,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft3()"
            }
          },
          {
            "result": {
              "duration": 193900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft2()"
            }
          },
          {
            "result": {
              "duration": 130900,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.aft1()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3758257100,
              "status": "passed"
            },
            "line": 9,
            "name": "User have to enter facebook application through chrome browser",
            "match": {
              "location": "StepDefinition.user_have_to_enter_facebook_application_through_chrome_browser()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[text()\u003d\u0027Forgotten password\u0027]\"}\n  (Session info: chrome\u003d101.0.4951.41)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027DESKTOP-KTEL7KH\u0027, ip: \u0027192.168.0.107\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_291\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 101.0.4951.41, chrome: {chromedriverVersion: 101.0.4951.41 (93c720db8323..., userDataDir: C:\\Users\\A\\AppData\\Local\\Te...}, goog:chromeOptions: {debuggerAddress: localhost:51035}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 2903e3d8963fd1b62b657b7ada263ced\n*** Element info: {Using\u003dxpath, value\u003d//a[text()\u003d\u0027Forgotten password\u0027]}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:353)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy20.click(Unknown Source)\r\n\tat org.base.BaseClass.btnClick(BaseClass.java:56)\r\n\tat org.stepDefinition.StepDefinition.user_have_to_click_the_forgotten_password(StepDefinition.java:32)\r\n\tat ✽.User have to click the forgotten password(file:src/test/resources/featureFile/forgottenpass.feature:10)\r\n",
              "duration": 54437300,
              "status": "failed"
            },
            "line": 10,
            "name": "User have to click the forgotten password",
            "match": {
              "location": "StepDefinition.user_have_to_click_the_forgotten_password()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 943400,
              "status": "skipped"
            },
            "line": 11,
            "name": "User have to enter emailid or phone number",
            "match": {
              "location": "StepDefinition.user_have_to_enter_emailid_or_phone_number()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 716000,
              "status": "skipped"
            },
            "line": 12,
            "name": "User have to click search button",
            "match": {
              "location": "StepDefinition.user_have_to_click_search_button()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@forgotten"
          },
          {
            "name": "@regression"
          }
        ]
      }
    ],
    "name": "",
    "description": "    To validate forgotten password functionality of facebook application",
    "id": "",
    "keyword": "Feature",
    "uri": "file:src/test/resources/featureFile/forgottenpass.feature",
    "tags": [
      {
        "name": "@forgotten",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]